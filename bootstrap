#!/usr/bin/env Rscript
# Automatically generated by provisionr
{
    root <- Sys.getenv("BOOTSTRAP_ROOT", NA_character_)
    if (is.na(root)) {
        args <- commandArgs(trailingOnly = FALSE)
        file <- grep("^--file=", args, value = TRUE)
        if (length(file) != 1L) {
            stop("Could not determine path to running script")
        }
        here <- dirname(normalizePath(sub("^--file=", "", file)))
    }
    else {
        here <- normalizePath(root, mustWork = TRUE)
    }
    message(sprintf("Working in '%s'", here))
    setwd(here)
    dir.create(".packages", FALSE)
    strict_lib_env <- Sys.getenv("BOOTSTRAP_STRICT_LIB", NA_character_)
    if (is.na(strict_lib_env)) {
        strict_lib <- TRUE
    }
    else {
        strict_lib <- as.logical(strict_lib_env)
        if (is.na(strict_lib)) {
            strict_lib <- TRUE
        }
    }
    if (strict_lib) {
        .libPaths(".packages")
    }
    else {
        .libPaths(c(".packages", .libPaths()))
    }
    has_provisionr <- function() {
        requireNamespace("provisionr", quietly = TRUE, lib.loc = if (strict_lib)
            ".packages"
        else NULL)
    }
    if (!has_provisionr()) {
        message("Installing provisionr")
        repos <- c("https://cran.rstudio.com", "https://mrc-ide.github.io/drat/")
        install.packages("provisionr", repos = repos, lib = ".packages")
    }
    if (!has_provisionr()) {
        stop("Failed to bootstrap provisionr")
    }
    src <- provisionr::package_sources(data = structure(list(
        spec = c("github::richfitz/rmnist", "github::richfitz/thor"
        )), .Names = "spec", class = "package_sources_list"))
    provisionr::provision_dependencies(".packages", src = src,
        read_travis = FALSE)
    if (!file.exists(".Renviron")) {
        writeLines(sprintf("R_LIBS_USER=\"%s\"", ".packages"),
            ".Renviron")
    }
}
